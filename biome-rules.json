[
  {
    "name": "noAccessKey",
    "description": "Enforce that the accessKey attribute is not used on any HTML element.",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/no-access-key",
    "isRecommended": true
  },
  {
    "name": "noAriaHiddenOnFocusable",
    "description": "Enforce that aria-hidden=“true” is not set on focusable elements.",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/no-aria-hidden-on-focusable",
    "isRecommended": true
  },
  {
    "name": "noAriaUnsupportedElements",
    "description": "Enforce that elements that do not support ARIA roles, states, and properties do not have those attributes.",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/no-aria-unsupported-elements",
    "isRecommended": true
  },
  {
    "name": "noAutofocus",
    "description": "Enforce that autoFocus prop is not used on elements.",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/no-autofocus",
    "isRecommended": true
  },
  {
    "name": "noDistractingElements",
    "description": "Enforces that no distracting elements are used.",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/no-distracting-elements",
    "isRecommended": true
  },
  {
    "name": "noHeaderScope",
    "description": "The scope prop should be used only on <th> elements.",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/no-header-scope",
    "isRecommended": true
  },
  {
    "name": "noInteractiveElementToNoninteractiveRole",
    "description": "Enforce that non-interactive ARIA roles are not assigned to interactive HTML elements.",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/no-interactive-element-to-noninteractive-role",
    "isRecommended": true
  },
  {
    "name": "noLabelWithoutControl",
    "description": "Enforce that a label element or component has a text label and an associated input.",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/no-label-without-control",
    "isRecommended": true
  },
  {
    "name": "noNoninteractiveElementInteractions",
    "description": "Disallow use event handlers on non-interactive elements.",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/no-noninteractive-element-interactions",
    "isRecommended": false
  },
  {
    "name": "noNoninteractiveElementToInteractiveRole",
    "description": "Enforce that interactive ARIA roles are not assigned to non-interactive HTML elements.",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/no-noninteractive-element-to-interactive-role",
    "isRecommended": true
  },
  {
    "name": "noNoninteractiveTabindex",
    "description": "Enforce that tabIndex is not assigned to non-interactive HTML elements.",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/no-noninteractive-tabindex",
    "isRecommended": true
  },
  {
    "name": "noPositiveTabindex",
    "description": "Prevent the usage of positive integers on tabIndex property",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/no-positive-tabindex",
    "isRecommended": true
  },
  {
    "name": "noRedundantAlt",
    "description": "Enforce img alt prop does not contain the word “image”, “picture”, or “photo”.",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/no-redundant-alt",
    "isRecommended": true
  },
  {
    "name": "noRedundantRoles",
    "description": "Enforce explicit role property is not the same as implicit/default role property on an element.",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/no-redundant-roles",
    "isRecommended": true
  },
  {
    "name": "noStaticElementInteractions",
    "description": "Enforce that static, visible elements (such as <div>) that have click handlers use the valid role attribute.",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/no-static-element-interactions",
    "isRecommended": true
  },
  {
    "name": "noSvgWithoutTitle",
    "description": "Enforces the usage of the title element for the svg element.",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/no-svg-without-title",
    "isRecommended": true
  },
  {
    "name": "useAltText",
    "description": "Enforce that all elements that require alternative text have meaningful information to relay back to the end user.",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/use-alt-text",
    "isRecommended": true
  },
  {
    "name": "useAnchorContent",
    "description": "Enforce that anchors have content and that the content is accessible to screen readers.",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/use-anchor-content",
    "isRecommended": true
  },
  {
    "name": "useAriaActivedescendantWithTabindex",
    "description": "Enforce that tabIndex is assigned to non-interactive HTML elements with aria-activedescendant.",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/use-aria-activedescendant-with-tabindex",
    "isRecommended": true
  },
  {
    "name": "useAriaPropsForRole",
    "description": "Enforce that elements with ARIA roles must have all required ARIA attributes for that role.",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/use-aria-props-for-role",
    "isRecommended": true
  },
  {
    "name": "useAriaPropsSupportedByRole",
    "description": "Enforce that ARIA properties are valid for the roles that are supported by the element.",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/use-aria-props-supported-by-role",
    "isRecommended": true
  },
  {
    "name": "useButtonType",
    "description": "Enforces the usage of the attribute type for the element button",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/use-button-type",
    "isRecommended": true
  },
  {
    "name": "useFocusableInteractive",
    "description": "Elements with an interactive role and interaction handlers must be focusable.",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/use-focusable-interactive",
    "isRecommended": true
  },
  {
    "name": "useHeadingContent",
    "description": "Enforce that heading elements (h1, h2, etc.) have content and that the content is accessible to screen readers. Accessible means that it is not hidden using the aria-hidden prop.",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/use-heading-content",
    "isRecommended": true
  },
  {
    "name": "useHtmlLang",
    "description": "Enforce that html element has lang attribute.",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/use-html-lang",
    "isRecommended": true
  },
  {
    "name": "useIframeTitle",
    "description": "Enforces the usage of the attribute title for the element iframe.",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/use-iframe-title",
    "isRecommended": true
  },
  {
    "name": "useKeyWithClickEvents",
    "description": "Enforce onClick is accompanied by at least one of the following: onKeyUp, onKeyDown, onKeyPress.",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/use-key-with-click-events",
    "isRecommended": true
  },
  {
    "name": "useKeyWithMouseEvents",
    "description": "Enforce onMouseOver / onMouseOut are accompanied by onFocus / onBlur.",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/use-key-with-mouse-events",
    "isRecommended": true
  },
  {
    "name": "useMediaCaption",
    "description": "Enforces that audio and video elements must have a track for captions.",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/use-media-caption",
    "isRecommended": true
  },
  {
    "name": "useSemanticElements",
    "description": "It detects the use of role attributes in JSX elements and suggests using semantic elements instead.",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/use-semantic-elements",
    "isRecommended": true
  },
  {
    "name": "useValidAnchor",
    "description": "Enforce that all anchors are valid, and they are navigable elements.",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/use-valid-anchor",
    "isRecommended": true
  },
  {
    "name": "useValidAriaProps",
    "description": "Ensures that ARIA properties aria-* are all valid.",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/use-valid-aria-props",
    "isRecommended": true
  },
  {
    "name": "useValidAriaRole",
    "description": "Elements with ARIA roles must use a valid, non-abstract ARIA role.",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/use-valid-aria-role",
    "isRecommended": true
  },
  {
    "name": "useValidAriaValues",
    "description": "Enforce that ARIA state and property values are valid.",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/use-valid-aria-values",
    "isRecommended": true
  },
  {
    "name": "useValidAutocomplete",
    "description": "Use valid values for the autocomplete attribute on input elements.",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/use-valid-autocomplete",
    "isRecommended": true
  },
  {
    "name": "useValidLang",
    "description": "Ensure that the attribute passed to the lang attribute is a correct ISO language and/or country.",
    "category": "a11y",
    "url": "https://biomejs.dev/linter/rules/use-valid-lang",
    "isRecommended": true
  },
  {
    "name": "noAdjacentSpacesInRegex",
    "description": "Disallow unclear usage of consecutive space characters in regular expression literals",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/no-adjacent-spaces-in-regex",
    "isRecommended": true
  },
  {
    "name": "noArguments",
    "description": "Disallow the use of arguments.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/no-arguments",
    "isRecommended": true
  },
  {
    "name": "noBannedTypes",
    "description": "Disallow primitive type aliases and misleading types.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/no-banned-types",
    "isRecommended": true
  },
  {
    "name": "noCommaOperator",
    "description": "Disallow comma operator.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/no-comma-operator",
    "isRecommended": true
  },
  {
    "name": "noEmptyTypeParameters",
    "description": "Disallow empty type parameters in type aliases and interfaces.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/no-empty-type-parameters",
    "isRecommended": true
  },
  {
    "name": "noExcessiveCognitiveComplexity",
    "description": "Disallow functions that exceed a given Cognitive Complexity score.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/no-excessive-cognitive-complexity",
    "isRecommended": false
  },
  {
    "name": "noExcessiveLinesPerFunction",
    "description": "Restrict the number of lines of code in a function.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/no-excessive-lines-per-function",
    "isRecommended": false
  },
  {
    "name": "noExcessiveNestedTestSuites",
    "description": "This rule enforces a maximum depth to nested describe() in test files.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/no-excessive-nested-test-suites",
    "isRecommended": false
  },
  {
    "name": "noExtraBooleanCast",
    "description": "Disallow unnecessary boolean casts",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/no-extra-boolean-cast",
    "isRecommended": true
  },
  {
    "name": "noFlatMapIdentity",
    "description": "Disallow to use unnecessary callback on flatMap.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/no-flat-map-identity",
    "isRecommended": true
  },
  {
    "name": "noForEach",
    "description": "Prefer for...of statement instead of Array.forEach.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/no-for-each",
    "isRecommended": false
  },
  {
    "name": "noImplicitCoercions",
    "description": "Disallow shorthand type conversions.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/no-implicit-coercions",
    "isRecommended": false
  },
  {
    "name": "noStaticOnlyClass",
    "description": "This rule reports when a class has no non-static members, such as for a class used exclusively as a static namespace.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/no-static-only-class",
    "isRecommended": true
  },
  {
    "name": "noThisInStatic",
    "description": "Disallow this and super in static contexts.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/no-this-in-static",
    "isRecommended": true
  },
  {
    "name": "noUselessCatch",
    "description": "Disallow unnecessary catch clauses.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/no-useless-catch",
    "isRecommended": true
  },
  {
    "name": "noUselessConstructor",
    "description": "Disallow unnecessary constructors.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/no-useless-constructor",
    "isRecommended": true
  },
  {
    "name": "noUselessContinue",
    "description": "Avoid using unnecessary continue.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/no-useless-continue",
    "isRecommended": true
  },
  {
    "name": "noUselessEmptyExport",
    "description": "Disallow empty exports that don’t change anything in a module file.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/no-useless-empty-export",
    "isRecommended": true
  },
  {
    "name": "noUselessEscapeInRegex",
    "description": "Disallow unnecessary escape sequence in regular expression literals.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/no-useless-escape-in-regex",
    "isRecommended": true
  },
  {
    "name": "noUselessFragments",
    "description": "Disallow unnecessary fragments",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/no-useless-fragments",
    "isRecommended": true
  },
  {
    "name": "noUselessLabel",
    "description": "Disallow unnecessary labels.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/no-useless-label",
    "isRecommended": true
  },
  {
    "name": "noUselessLoneBlockStatements",
    "description": "Disallow unnecessary nested block statements.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/no-useless-lone-block-statements",
    "isRecommended": true
  },
  {
    "name": "noUselessRename",
    "description": "Disallow renaming import, export, and destructured assignments to the same name.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/no-useless-rename",
    "isRecommended": true
  },
  {
    "name": "noUselessStringConcat",
    "description": "Disallow unnecessary concatenation of string or template literals.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/no-useless-string-concat",
    "isRecommended": false
  },
  {
    "name": "noUselessStringRaw",
    "description": "Disallow unnecessary String.raw function in template string literals without any escape sequence.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/no-useless-string-raw",
    "isRecommended": true
  },
  {
    "name": "noUselessSwitchCase",
    "description": "Disallow useless case in switch statements.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/no-useless-switch-case",
    "isRecommended": true
  },
  {
    "name": "noUselessTernary",
    "description": "Disallow ternary operators when simpler alternatives exist.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/no-useless-ternary",
    "isRecommended": true
  },
  {
    "name": "noUselessThisAlias",
    "description": "Disallow useless this aliasing.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/no-useless-this-alias",
    "isRecommended": true
  },
  {
    "name": "noUselessTypeConstraint",
    "description": "Disallow using any or unknown as type constraint.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/no-useless-type-constraint",
    "isRecommended": true
  },
  {
    "name": "noUselessUndefinedInitialization",
    "description": "Disallow initializing variables to undefined.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/no-useless-undefined-initialization",
    "isRecommended": true
  },
  {
    "name": "noVoid",
    "description": "Disallow the use of void operators, which is not a familiar operator.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/no-void",
    "isRecommended": false
  },
  {
    "name": "useArrowFunction",
    "description": "Use arrow functions over function expressions.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/use-arrow-function",
    "isRecommended": true
  },
  {
    "name": "useDateNow",
    "description": "Use Date.now() to get the number of milliseconds since the Unix Epoch.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/use-date-now",
    "isRecommended": true
  },
  {
    "name": "useFlatMap",
    "description": "Promotes the use of .flatMap() when map().flat() are used together.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/use-flat-map",
    "isRecommended": true
  },
  {
    "name": "useIndexOf",
    "description": "Prefer Array#{indexOf,lastIndexOf}() over Array#{findIndex,findLastIndex}() when looking for the index of an item.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/use-index-of",
    "isRecommended": true
  },
  {
    "name": "useLiteralKeys",
    "description": "Enforce the usage of a literal access to properties over computed property access.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/use-literal-keys",
    "isRecommended": true
  },
  {
    "name": "useNumericLiterals",
    "description": "Disallow parseInt() and Number.parseInt() in favor of binary, octal, and hexadecimal literals",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/use-numeric-literals",
    "isRecommended": true
  },
  {
    "name": "useOptionalChain",
    "description": "Enforce using concise optional chain instead of chained logical expressions.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/use-optional-chain",
    "isRecommended": true
  },
  {
    "name": "useRegexLiterals",
    "description": "Enforce the use of the regular expression literals instead of the RegExp constructor if possible.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/use-regex-literals",
    "isRecommended": true
  },
  {
    "name": "useSimpleNumberKeys",
    "description": "Disallow number literal object member names which are not base 10 or use underscore as separator.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/use-simple-number-keys",
    "isRecommended": true
  },
  {
    "name": "useSimplifiedLogicExpression",
    "description": "Discard redundant terms from logical expressions.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/use-simplified-logic-expression",
    "isRecommended": false
  },
  {
    "name": "useWhile",
    "description": "Enforce the use of while loops instead of for loops when the initializer and update expressions are not needed.",
    "category": "complexity",
    "url": "https://biomejs.dev/linter/rules/use-while",
    "isRecommended": false
  },
  {
    "name": "noChildrenProp",
    "description": "Prevent passing of children as props.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-children-prop",
    "isRecommended": true
  },
  {
    "name": "noConstAssign",
    "description": "Prevents from having const variables being re-assigned.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-const-assign",
    "isRecommended": true
  },
  {
    "name": "noConstantCondition",
    "description": "Disallow constant expressions in conditions",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-constant-condition",
    "isRecommended": true
  },
  {
    "name": "noConstantMathMinMaxClamp",
    "description": "Disallow the use of Math.min and Math.max to clamp a value where the result itself is constant.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-constant-math-min-max-clamp",
    "isRecommended": true
  },
  {
    "name": "noConstructorReturn",
    "description": "Disallow returning a value from a constructor.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-constructor-return",
    "isRecommended": true
  },
  {
    "name": "noEmptyCharacterClassInRegex",
    "description": "Disallow empty character classes in regular expression literals.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-empty-character-class-in-regex",
    "isRecommended": true
  },
  {
    "name": "noEmptyPattern",
    "description": "Disallows empty destructuring patterns.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-empty-pattern",
    "isRecommended": true
  },
  {
    "name": "noGlobalDirnameFilename",
    "description": "Disallow the use of __dirname and __filename in the global scope.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-global-dirname-filename",
    "isRecommended": false
  },
  {
    "name": "noGlobalObjectCalls",
    "description": "Disallow calling global object properties as functions",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-global-object-calls",
    "isRecommended": true
  },
  {
    "name": "noInnerDeclarations",
    "description": "Disallow function and var declarations that are accessible outside their block.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-inner-declarations",
    "isRecommended": true
  },
  {
    "name": "noInvalidBuiltinInstantiation",
    "description": "Ensure that builtins are correctly instantiated.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-invalid-builtin-instantiation",
    "isRecommended": true
  },
  {
    "name": "noInvalidConstructorSuper",
    "description": "Prevents the incorrect use of super() inside classes. It also checks whether a call super() is missing from classes that extends other constructors.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-invalid-constructor-super",
    "isRecommended": true
  },
  {
    "name": "noInvalidUseBeforeDeclaration",
    "description": "Disallow the use of variables and function parameters before their declaration",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-invalid-use-before-declaration",
    "isRecommended": true
  },
  {
    "name": "noNestedComponentDefinitions",
    "description": "Disallows defining React components inside other components.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-nested-component-definitions",
    "isRecommended": false
  },
  {
    "name": "noNodejsModules",
    "description": "Forbid the use of Node.js builtin modules.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-nodejs-modules",
    "isRecommended": false
  },
  {
    "name": "noNonoctalDecimalEscape",
    "description": "Disallow \\8 and \\9 escape sequences in string literals.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-nonoctal-decimal-escape",
    "isRecommended": true
  },
  {
    "name": "noPrecisionLoss",
    "description": "Disallow literal numbers that lose precision",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-precision-loss",
    "isRecommended": true
  },
  {
    "name": "noPrivateImports",
    "description": "Restrict imports of private exports.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-private-imports",
    "isRecommended": false
  },
  {
    "name": "noProcessGlobal",
    "description": "Disallow the use of process global.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-process-global",
    "isRecommended": false
  },
  {
    "name": "noReactPropAssignments",
    "description": "Disallow assigning to React component props.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-react-prop-assignments",
    "isRecommended": false
  },
  {
    "name": "noRenderReturnValue",
    "description": "Prevent the usage of the return value of React.render.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-render-return-value",
    "isRecommended": false
  },
  {
    "name": "noRestrictedElements",
    "description": "Disallow the use of configured elements.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-restricted-elements",
    "isRecommended": false
  },
  {
    "name": "noSelfAssign",
    "description": "Disallow assignments where both sides are exactly the same.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-self-assign",
    "isRecommended": true
  },
  {
    "name": "noSetterReturn",
    "description": "Disallow returning a value from a setter",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-setter-return",
    "isRecommended": true
  },
  {
    "name": "noSolidDestructuredProps",
    "description": "Disallow destructuring props inside JSX components in Solid projects.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-solid-destructured-props",
    "isRecommended": false
  },
  {
    "name": "noStringCaseMismatch",
    "description": "Disallow comparison of expressions modifying the string case with non-compliant value.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-string-case-mismatch",
    "isRecommended": true
  },
  {
    "name": "noSwitchDeclarations",
    "description": "Disallow lexical declarations in switch clauses.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-switch-declarations",
    "isRecommended": true
  },
  {
    "name": "noUndeclaredDependencies",
    "description": "Disallow the use of dependencies that aren’t specified in the package.json.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-undeclared-dependencies",
    "isRecommended": false
  },
  {
    "name": "noUndeclaredVariables",
    "description": "Prevents the usage of variables that haven’t been declared inside the document.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-undeclared-variables",
    "isRecommended": false
  },
  {
    "name": "noUnreachable",
    "description": "Disallow unreachable code",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-unreachable",
    "isRecommended": true
  },
  {
    "name": "noUnreachableSuper",
    "description": "Ensures the super() constructor is called exactly once on every code  path in a class constructor before this is accessed if the class has a superclass",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-unreachable-super",
    "isRecommended": true
  },
  {
    "name": "noUnsafeFinally",
    "description": "Disallow control flow statements in finally blocks.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-unsafe-finally",
    "isRecommended": true
  },
  {
    "name": "noUnsafeOptionalChaining",
    "description": "Disallow the use of optional chaining in contexts where the undefined value is not allowed.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-unsafe-optional-chaining",
    "isRecommended": true
  },
  {
    "name": "noUnusedFunctionParameters",
    "description": "Disallow unused function parameters.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-unused-function-parameters",
    "isRecommended": true
  },
  {
    "name": "noUnusedImports",
    "description": "Disallow unused imports.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-unused-imports",
    "isRecommended": true
  },
  {
    "name": "noUnusedLabels",
    "description": "Disallow unused labels.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-unused-labels",
    "isRecommended": true
  },
  {
    "name": "noUnusedPrivateClassMembers",
    "description": "Disallow unused private class members",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-unused-private-class-members",
    "isRecommended": true
  },
  {
    "name": "noUnusedVariables",
    "description": "Disallow unused variables.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-unused-variables",
    "isRecommended": true
  },
  {
    "name": "noVoidElementsWithChildren",
    "description": "This rules prevents void elements (AKA self-closing elements) from having children.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-void-elements-with-children",
    "isRecommended": true
  },
  {
    "name": "noVoidTypeReturn",
    "description": "Disallow returning a value from a function with the return type ‘void’",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/no-void-type-return",
    "isRecommended": true
  },
  {
    "name": "useExhaustiveDependencies",
    "description": "Enforce all dependencies are correctly specified in a React hook.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/use-exhaustive-dependencies",
    "isRecommended": false
  },
  {
    "name": "useHookAtTopLevel",
    "description": "Enforce that all React hooks are being called from the Top Level component functions.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/use-hook-at-top-level",
    "isRecommended": false
  },
  {
    "name": "useImportExtensions",
    "description": "Enforce file extensions for relative imports.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/use-import-extensions",
    "isRecommended": false
  },
  {
    "name": "useIsNan",
    "description": "Require calls to isNaN() when checking for NaN.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/use-is-nan",
    "isRecommended": true
  },
  {
    "name": "useJsonImportAttributes",
    "description": "Enforces the use of with { type: \"json\" } for JSON module imports.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/use-json-import-attributes",
    "isRecommended": false
  },
  {
    "name": "useJsxKeyInIterable",
    "description": "Disallow missing key props in iterators/collection literals.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/use-jsx-key-in-iterable",
    "isRecommended": false
  },
  {
    "name": "useParseIntRadix",
    "description": "Enforce the consistent use of the radix argument when using parseInt().",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/use-parse-int-radix",
    "isRecommended": true
  },
  {
    "name": "useSingleJsDocAsterisk",
    "description": "Enforce JSDoc comment lines to start with a single asterisk, except for the first one.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/use-single-js-doc-asterisk",
    "isRecommended": false
  },
  {
    "name": "useUniqueElementIds",
    "description": "Prevent the usage of static string literal id attribute on elements.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/use-unique-element-ids",
    "isRecommended": false
  },
  {
    "name": "useValidForDirection",
    "description": "Enforce “for” loop update clause moving the counter in the right direction.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/use-valid-for-direction",
    "isRecommended": true
  },
  {
    "name": "useValidTypeof",
    "description": "This rule checks that the result of a typeof expression is compared to a valid value.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/use-valid-typeof",
    "isRecommended": true
  },
  {
    "name": "useYield",
    "description": "Require generator functions to contain yield.",
    "category": "correctness",
    "url": "https://biomejs.dev/linter/rules/use-yield",
    "isRecommended": true
  },
  {
    "name": "noFloatingPromises",
    "description": "Require Promise-like statements to be handled appropriately.",
    "category": "nursery",
    "url": "https://biomejs.dev/linter/rules/no-floating-promises",
    "isRecommended": false
  },
  {
    "name": "noImportCycles",
    "description": "Prevent import cycles.",
    "category": "nursery",
    "url": "https://biomejs.dev/linter/rules/no-import-cycles",
    "isRecommended": false
  },
  {
    "name": "noMisusedPromises",
    "description": "Disallow Promises to be used in places where they are almost certainly a",
    "category": "nursery",
    "url": "https://biomejs.dev/linter/rules/no-misused-promises",
    "isRecommended": false
  },
  {
    "name": "noNextAsyncClientComponent",
    "description": "Prevent client components from being async functions.",
    "category": "nursery",
    "url": "https://biomejs.dev/linter/rules/no-next-async-client-component",
    "isRecommended": false
  },
  {
    "name": "noNonNullAssertedOptionalChain",
    "description": "Disallow non-null assertions after optional chaining expressions.",
    "category": "nursery",
    "url": "https://biomejs.dev/linter/rules/no-non-null-asserted-optional-chain",
    "isRecommended": false
  },
  {
    "name": "noQwikUseVisibleTask",
    "description": "Disallow useVisibleTask$() functions in Qwik components.",
    "category": "nursery",
    "url": "https://biomejs.dev/linter/rules/no-qwik-use-visible-task",
    "isRecommended": false
  },
  {
    "name": "noSecrets",
    "description": "Disallow usage of sensitive data such as API keys and tokens.",
    "category": "nursery",
    "url": "https://biomejs.dev/linter/rules/no-secrets",
    "isRecommended": false
  },
  {
    "name": "noShadow",
    "description": "Disallow variable declarations from shadowing variables declared in the outer scope.",
    "category": "nursery",
    "url": "https://biomejs.dev/linter/rules/no-shadow",
    "isRecommended": false
  },
  {
    "name": "noUnnecessaryConditions",
    "description": "Disallow unnecessary type-based conditions that can be statically determined as redundant.",
    "category": "nursery",
    "url": "https://biomejs.dev/linter/rules/no-unnecessary-conditions",
    "isRecommended": false
  },
  {
    "name": "noUnresolvedImports",
    "description": "Warn when importing non-existing exports.",
    "category": "nursery",
    "url": "https://biomejs.dev/linter/rules/no-unresolved-imports",
    "isRecommended": false
  },
  {
    "name": "noUselessUndefined",
    "description": "Disallow the use of useless undefined.",
    "category": "nursery",
    "url": "https://biomejs.dev/linter/rules/no-useless-undefined",
    "isRecommended": false
  },
  {
    "name": "noVueDataObjectDeclaration",
    "description": "Enforce that Vue component data options are declared as functions.",
    "category": "nursery",
    "url": "https://biomejs.dev/linter/rules/no-vue-data-object-declaration",
    "isRecommended": false
  },
  {
    "name": "noVueReservedKeys",
    "description": "Disallow reserved keys in Vue component data and computed properties.",
    "category": "nursery",
    "url": "https://biomejs.dev/linter/rules/no-vue-reserved-keys",
    "isRecommended": false
  },
  {
    "name": "noVueReservedProps",
    "description": "Disallow reserved names to be used as props.",
    "category": "nursery",
    "url": "https://biomejs.dev/linter/rules/no-vue-reserved-props",
    "isRecommended": false
  },
  {
    "name": "useAnchorHref",
    "description": "Enforces href attribute for <a> elements.",
    "category": "nursery",
    "url": "https://biomejs.dev/linter/rules/use-anchor-href",
    "isRecommended": false
  },
  {
    "name": "useConsistentTypeDefinitions",
    "description": "Enforce type definitions to consistently use either interface or type.",
    "category": "nursery",
    "url": "https://biomejs.dev/linter/rules/use-consistent-type-definitions",
    "isRecommended": false
  },
  {
    "name": "useExhaustiveSwitchCases",
    "description": "Require switch-case statements to be exhaustive.",
    "category": "nursery",
    "url": "https://biomejs.dev/linter/rules/use-exhaustive-switch-cases",
    "isRecommended": false
  },
  {
    "name": "useExplicitType",
    "description": "Enforce types in functions, methods, variables, and parameters.",
    "category": "nursery",
    "url": "https://biomejs.dev/linter/rules/use-explicit-type",
    "isRecommended": false
  },
  {
    "name": "useImageSize",
    "description": "Enforces that <img> elements have both width and height attributes.",
    "category": "nursery",
    "url": "https://biomejs.dev/linter/rules/use-image-size",
    "isRecommended": false
  },
  {
    "name": "useMaxParams",
    "description": "Enforce a maximum number of parameters in function definitions.",
    "category": "nursery",
    "url": "https://biomejs.dev/linter/rules/use-max-params",
    "isRecommended": false
  },
  {
    "name": "useQwikClasslist",
    "description": "Prefer using the class prop as a classlist over the classnames helper.",
    "category": "nursery",
    "url": "https://biomejs.dev/linter/rules/use-qwik-classlist",
    "isRecommended": false
  },
  {
    "name": "useReactFunctionComponents",
    "description": "Enforce that components are defined as functions and never as classes.",
    "category": "nursery",
    "url": "https://biomejs.dev/linter/rules/use-react-function-components",
    "isRecommended": false
  },
  {
    "name": "useSortedClasses",
    "description": "Enforce the sorting of CSS utility classes.",
    "category": "nursery",
    "url": "https://biomejs.dev/linter/rules/use-sorted-classes",
    "isRecommended": false
  },
  {
    "name": "noAccumulatingSpread",
    "description": "Disallow the use of spread (...) syntax on accumulators.",
    "category": "performance",
    "url": "https://biomejs.dev/linter/rules/no-accumulating-spread",
    "isRecommended": true
  },
  {
    "name": "noAwaitInLoops",
    "description": "Disallow await inside loops.",
    "category": "performance",
    "url": "https://biomejs.dev/linter/rules/no-await-in-loops",
    "isRecommended": false
  },
  {
    "name": "noBarrelFile",
    "description": "Disallow the use of barrel file.",
    "category": "performance",
    "url": "https://biomejs.dev/linter/rules/no-barrel-file",
    "isRecommended": false
  },
  {
    "name": "noDelete",
    "description": "Disallow the use of the delete operator.",
    "category": "performance",
    "url": "https://biomejs.dev/linter/rules/no-delete",
    "isRecommended": false
  },
  {
    "name": "noDynamicNamespaceImportAccess",
    "description": "Disallow accessing namespace imports dynamically.",
    "category": "performance",
    "url": "https://biomejs.dev/linter/rules/no-dynamic-namespace-import-access",
    "isRecommended": true
  },
  {
    "name": "noImgElement",
    "description": "Prevent usage of <img> element in a Next.js project.",
    "category": "performance",
    "url": "https://biomejs.dev/linter/rules/no-img-element",
    "isRecommended": false
  },
  {
    "name": "noNamespaceImport",
    "description": "Disallow the use of namespace imports.",
    "category": "performance",
    "url": "https://biomejs.dev/linter/rules/no-namespace-import",
    "isRecommended": false
  },
  {
    "name": "noReExportAll",
    "description": "Avoid re-export all.",
    "category": "performance",
    "url": "https://biomejs.dev/linter/rules/no-re-export-all",
    "isRecommended": false
  },
  {
    "name": "noUnwantedPolyfillio",
    "description": "Prevent duplicate polyfills from Polyfill.io.",
    "category": "performance",
    "url": "https://biomejs.dev/linter/rules/no-unwanted-polyfillio",
    "isRecommended": false
  },
  {
    "name": "useGoogleFontPreconnect",
    "description": "Ensure the preconnect attribute is used when using Google Fonts.",
    "category": "performance",
    "url": "https://biomejs.dev/linter/rules/use-google-font-preconnect",
    "isRecommended": false
  },
  {
    "name": "useSolidForComponent",
    "description": "Enforce using Solid’s <For /> component for mapping an array to JSX elements.",
    "category": "performance",
    "url": "https://biomejs.dev/linter/rules/use-solid-for-component",
    "isRecommended": false
  },
  {
    "name": "useTopLevelRegex",
    "description": "Require regex literals to be declared at the top level.",
    "category": "performance",
    "url": "https://biomejs.dev/linter/rules/use-top-level-regex",
    "isRecommended": false
  },
  {
    "name": "noBlankTarget",
    "description": "Disallow target=\"_blank\" attribute without rel=\"noopener\".",
    "category": "security",
    "url": "https://biomejs.dev/linter/rules/no-blank-target",
    "isRecommended": true
  },
  {
    "name": "noDangerouslySetInnerHtml",
    "description": "Prevent the usage of dangerous JSX props",
    "category": "security",
    "url": "https://biomejs.dev/linter/rules/no-dangerously-set-inner-html/",
    "isRecommended": true
  },
  {
    "name": "noDangerouslySetInnerHtmlWithChildren",
    "description": "Report when a DOM element or a component uses both children and dangerouslySetInnerHTML prop.",
    "category": "security",
    "url": "https://biomejs.dev/linter/rules/no-dangerously-set-inner-html-with-children",
    "isRecommended": true
  },
  {
    "name": "noGlobalEval",
    "description": "Disallow the use of global eval().",
    "category": "security",
    "url": "https://biomejs.dev/linter/rules/no-global-eval",
    "isRecommended": true
  },
  {
    "name": "noCommonJs",
    "description": "Disallow use of CommonJs module system in favor of ESM style imports.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/no-common-js",
    "isRecommended": false
  },
  {
    "name": "noDefaultExport",
    "description": "Disallow default exports.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/no-default-export",
    "isRecommended": false
  },
  {
    "name": "noDoneCallback",
    "description": "Disallow using a callback in asynchronous tests and hooks.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/no-done-callback",
    "isRecommended": false
  },
  {
    "name": "noEnum",
    "description": "Disallow TypeScript enum.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/no-enum",
    "isRecommended": false
  },
  {
    "name": "noExportedImports",
    "description": "Disallow exporting an imported variable.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/no-exported-imports",
    "isRecommended": false
  },
  {
    "name": "noHeadElement",
    "description": "Prevent usage of <head> element in a Next.js project.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/no-head-element",
    "isRecommended": false
  },
  {
    "name": "noImplicitBoolean",
    "description": "Disallow implicit true values on JSX boolean attributes",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/no-implicit-boolean",
    "isRecommended": false
  },
  {
    "name": "noInferrableTypes",
    "description": "Disallow type annotations for variables, parameters, and class properties initialized with a literal expression.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/no-inferrable-types",
    "isRecommended": false
  },
  {
    "name": "noMagicNumbers",
    "description": "Reports usage of “magic numbers” — numbers used directly instead of being assigned to named constants.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/no-magic-numbers",
    "isRecommended": false
  },
  {
    "name": "noNamespace",
    "description": "Disallow the use of TypeScript’s namespaces.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/no-namespace",
    "isRecommended": false
  },
  {
    "name": "noNegationElse",
    "description": "Disallow negation in the condition of an if statement if it has an else clause.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/no-negation-else",
    "isRecommended": false
  },
  {
    "name": "noNestedTernary",
    "description": "Disallow nested ternary expressions.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/no-nested-ternary",
    "isRecommended": false
  },
  {
    "name": "noNonNullAssertion",
    "description": "Disallow non-null assertions using the ! postfix operator.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/no-non-null-assertion",
    "isRecommended": true
  },
  {
    "name": "noParameterAssign",
    "description": "Disallow reassigning function parameters.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/no-parameter-assign",
    "isRecommended": false
  },
  {
    "name": "noParameterProperties",
    "description": "Disallow the use of parameter properties in class constructors.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/no-parameter-properties",
    "isRecommended": false
  },
  {
    "name": "noProcessEnv",
    "description": "Disallow the use of process.env.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/no-process-env",
    "isRecommended": false
  },
  {
    "name": "noRestrictedGlobals",
    "description": "This rule allows you to specify global variable names that you don’t want to use in your application.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/no-restricted-globals",
    "isRecommended": false
  },
  {
    "name": "noRestrictedImports",
    "description": "Disallow specified modules when loaded by import or require.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/no-restricted-imports",
    "isRecommended": false
  },
  {
    "name": "noRestrictedTypes",
    "description": "Disallow user defined types.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/no-restricted-types",
    "isRecommended": false
  },
  {
    "name": "noShoutyConstants",
    "description": "Disallow the use of constants which its value is the upper-case version of its name.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/no-shouty-constants",
    "isRecommended": false
  },
  {
    "name": "noSubstr",
    "description": "Enforce the use of String.slice() over String.substr() and String.substring().",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/no-substr",
    "isRecommended": false
  },
  {
    "name": "noUnusedTemplateLiteral",
    "description": "Disallow template literals if interpolation and special-character handling are not needed",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/no-unused-template-literal",
    "isRecommended": false
  },
  {
    "name": "noUselessElse",
    "description": "Disallow else block when the if block breaks early.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/no-useless-else",
    "isRecommended": false
  },
  {
    "name": "noYodaExpression",
    "description": "Disallow the use of yoda expressions.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/no-yoda-expression",
    "isRecommended": false
  },
  {
    "name": "useArrayLiterals",
    "description": "Disallow Array constructors.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-array-literals",
    "isRecommended": true
  },
  {
    "name": "useAsConstAssertion",
    "description": "Enforce the use of as const over literal type and type annotation.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-as-const-assertion",
    "isRecommended": false
  },
  {
    "name": "useAtIndex",
    "description": "Use at() instead of integer index access.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-at-index",
    "isRecommended": false
  },
  {
    "name": "useBlockStatements",
    "description": "Requires following curly brace conventions.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-block-statements",
    "isRecommended": false
  },
  {
    "name": "useCollapsedElseIf",
    "description": "Enforce using else if instead of nested if in else clauses.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-collapsed-else-if",
    "isRecommended": false
  },
  {
    "name": "useCollapsedIf",
    "description": "Enforce using single if instead of nested if clauses.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-collapsed-if",
    "isRecommended": false
  },
  {
    "name": "useComponentExportOnlyModules",
    "description": "Enforce declaring components only within modules that export React Components exclusively.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-component-export-only-modules",
    "isRecommended": false
  },
  {
    "name": "useConsistentArrayType",
    "description": "Require consistently using either T[] or Array<T>",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-consistent-array-type",
    "isRecommended": false
  },
  {
    "name": "useConsistentBuiltinInstantiation",
    "description": "Enforce the use of new for all builtins, except String, Number and Boolean.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-consistent-builtin-instantiation",
    "isRecommended": false
  },
  {
    "name": "useConsistentCurlyBraces",
    "description": "This rule enforces consistent use of curly braces inside JSX attributes and JSX children.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-consistent-curly-braces",
    "isRecommended": false
  },
  {
    "name": "useConsistentMemberAccessibility",
    "description": "Require consistent accessibility modifiers on class properties and methods.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-consistent-member-accessibility",
    "isRecommended": false
  },
  {
    "name": "useConsistentObjectDefinitions",
    "description": "Require the consistent declaration of object literals. Defaults to explicit definitions.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-consistent-object-definitions",
    "isRecommended": false
  },
  {
    "name": "useConst",
    "description": "Require const declarations for variables that are only assigned once.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-const",
    "isRecommended": true
  },
  {
    "name": "useDefaultParameterLast",
    "description": "Enforce default function parameters and optional function parameters to be last.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-default-parameter-last",
    "isRecommended": false
  },
  {
    "name": "useDefaultSwitchClause",
    "description": "Require the default clause in switch statements.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-default-switch-clause",
    "isRecommended": false
  },
  {
    "name": "useEnumInitializers",
    "description": "Require that each enum member value be explicitly initialized.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-enum-initializers",
    "isRecommended": false
  },
  {
    "name": "useExplicitLengthCheck",
    "description": "Enforce explicitly comparing the length, size, byteLength or byteOffset property of a value.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-explicit-length-check",
    "isRecommended": false
  },
  {
    "name": "useExponentiationOperator",
    "description": "Disallow the use of Math.pow in favor of the ** operator.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-exponentiation-operator",
    "isRecommended": true
  },
  {
    "name": "useExportType",
    "description": "Promotes the use of export type for types.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-export-type",
    "isRecommended": true
  },
  {
    "name": "useExportsLast",
    "description": "Require that all exports are declared after all non-export statements.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-exports-last",
    "isRecommended": false
  },
  {
    "name": "useFilenamingConvention",
    "description": "Enforce naming conventions for JavaScript and TypeScript filenames.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-filenaming-convention",
    "isRecommended": false
  },
  {
    "name": "useForOf",
    "description": "Prefer using for...of loops over standard for loops where possible.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-for-of",
    "isRecommended": false
  },
  {
    "name": "useFragmentSyntax",
    "description": "This rule enforces the use of <>...</> over <Fragment>...</Fragment>.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-fragment-syntax",
    "isRecommended": false
  },
  {
    "name": "useGroupedAccessorPairs",
    "description": "Enforce that getters and setters for the same property are adjacent in class and object definitions.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-grouped-accessor-pairs",
    "isRecommended": false
  },
  {
    "name": "useImportType",
    "description": "Promotes the use of import type for types.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-import-type",
    "isRecommended": true
  },
  {
    "name": "useLiteralEnumMembers",
    "description": "Require all enum members to be literal values.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-literal-enum-members",
    "isRecommended": true
  },
  {
    "name": "useNamingConvention",
    "description": "Enforce naming conventions for everything across a codebase.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-naming-convention",
    "isRecommended": false
  },
  {
    "name": "useNodeAssertStrict",
    "description": "Promotes the usage of node:assert/strict over node:assert.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-node-assert-strict",
    "isRecommended": false
  },
  {
    "name": "useNodejsImportProtocol",
    "description": "Enforces using the node: protocol for Node.js builtin modules.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-nodejs-import-protocol",
    "isRecommended": true
  },
  {
    "name": "useNumberNamespace",
    "description": "Use the Number properties instead of global ones.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-number-namespace",
    "isRecommended": false
  },
  {
    "name": "useNumericSeparators",
    "description": "Enforce the use of numeric separators in numeric literals.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-numeric-separators",
    "isRecommended": false
  },
  {
    "name": "useObjectSpread",
    "description": "Prefer object spread over Object.assign() when constructing new objects.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-object-spread",
    "isRecommended": false
  },
  {
    "name": "useReadonlyClassProperties",
    "description": "Enforce marking members as readonly if they are never modified outside the constructor.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-readonly-class-properties",
    "isRecommended": false
  },
  {
    "name": "useSelfClosingElements",
    "description": "Prevent extra closing tags for components without children.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-self-closing-elements",
    "isRecommended": false
  },
  {
    "name": "useShorthandAssign",
    "description": "Require assignment operator shorthand where possible.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-shorthand-assign",
    "isRecommended": false
  },
  {
    "name": "useShorthandFunctionType",
    "description": "Enforce using function types instead of object type with call signatures.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-shorthand-function-type",
    "isRecommended": true
  },
  {
    "name": "useSingleVarDeclarator",
    "description": "Disallow multiple variable declarations in the same variable statement",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-single-var-declarator",
    "isRecommended": false
  },
  {
    "name": "useSymbolDescription",
    "description": "Require a description parameter for the Symbol().",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-symbol-description",
    "isRecommended": false
  },
  {
    "name": "useTemplate",
    "description": "Prefer template literals over string concatenation.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-template",
    "isRecommended": true
  },
  {
    "name": "useThrowNewError",
    "description": "Require new when throwing an error.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-throw-new-error",
    "isRecommended": false
  },
  {
    "name": "useThrowOnlyError",
    "description": "Disallow throwing non-Error values.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-throw-only-error",
    "isRecommended": false
  },
  {
    "name": "useTrimStartEnd",
    "description": "Enforce the use of String.trimStart() and String.trimEnd() over String.trimLeft() and String.trimRight().",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-trim-start-end",
    "isRecommended": false
  },
  {
    "name": "useUnifiedTypeSignatures",
    "description": "Disallow overload signatures that can be unified into a single signature.",
    "category": "style",
    "url": "https://biomejs.dev/linter/rules/use-unified-type-signatures",
    "isRecommended": false
  },
  {
    "name": "noAlert",
    "description": "Disallow the use of alert, confirm, and prompt.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-alert",
    "isRecommended": false
  },
  {
    "name": "noApproximativeNumericConstant",
    "description": "Use standard constants instead of approximated literals.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-approximative-numeric-constant",
    "isRecommended": true
  },
  {
    "name": "noArrayIndexKey",
    "description": "Discourage the usage of Array index in keys.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-array-index-key",
    "isRecommended": true
  },
  {
    "name": "noAssignInExpressions",
    "description": "Disallow assignments in expressions.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-assign-in-expressions",
    "isRecommended": true
  },
  {
    "name": "noAsyncPromiseExecutor",
    "description": "Disallows using an async function as a Promise executor.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-async-promise-executor",
    "isRecommended": true
  },
  {
    "name": "noBitwiseOperators",
    "description": "Disallow bitwise operators.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-bitwise-operators",
    "isRecommended": false
  },
  {
    "name": "noCatchAssign",
    "description": "Disallow reassigning exceptions in catch clauses.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-catch-assign",
    "isRecommended": true
  },
  {
    "name": "noClassAssign",
    "description": "Disallow reassigning class members.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-class-assign",
    "isRecommended": true
  },
  {
    "name": "noCommentText",
    "description": "Prevent comments from being inserted as text nodes",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-comment-text",
    "isRecommended": true
  },
  {
    "name": "noCompareNegZero",
    "description": "Disallow comparing against -0",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-compare-neg-zero",
    "isRecommended": true
  },
  {
    "name": "noConfusingLabels",
    "description": "Disallow labeled statements that are not loops.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-confusing-labels",
    "isRecommended": true
  },
  {
    "name": "noConfusingVoidType",
    "description": "Disallow void type outside of generic or return types.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-confusing-void-type",
    "isRecommended": true
  },
  {
    "name": "noConsole",
    "description": "Disallow the use of console.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-console",
    "isRecommended": false
  },
  {
    "name": "noConstEnum",
    "description": "Disallow TypeScript const enum",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-const-enum",
    "isRecommended": true
  },
  {
    "name": "noConstantBinaryExpressions",
    "description": "Disallow expressions where the operation doesn’t affect the value",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-constant-binary-expressions",
    "isRecommended": false
  },
  {
    "name": "noControlCharactersInRegex",
    "description": "Prevents from having control characters and some escape sequences that match control characters in regular expression literals.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-control-characters-in-regex",
    "isRecommended": true
  },
  {
    "name": "noDebugger",
    "description": "Disallow the use of debugger",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-debugger",
    "isRecommended": true
  },
  {
    "name": "noDocumentCookie",
    "description": "Disallow direct assignments to document.cookie.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-document-cookie",
    "isRecommended": true
  },
  {
    "name": "noDocumentImportInPage",
    "description": "Prevents importing next/document outside of pages/_document.jsx in Next.js projects.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-document-import-in-page",
    "isRecommended": false
  },
  {
    "name": "noDoubleEquals",
    "description": "Require the use of === and !==.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-double-equals",
    "isRecommended": true
  },
  {
    "name": "noDuplicateCase",
    "description": "Disallow duplicate case labels.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-duplicate-case",
    "isRecommended": true
  },
  {
    "name": "noDuplicateClassMembers",
    "description": "Disallow duplicate class members.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-duplicate-class-members",
    "isRecommended": true
  },
  {
    "name": "noDuplicateElseIf",
    "description": "Disallow duplicate conditions in if-else-if chains",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-duplicate-else-if",
    "isRecommended": true
  },
  {
    "name": "noDuplicateJsxProps",
    "description": "Prevents JSX properties to be assigned multiple times.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-duplicate-jsx-props",
    "isRecommended": true
  },
  {
    "name": "noDuplicateObjectKeys",
    "description": "Disallow two keys with the same name inside objects.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-duplicate-object-keys",
    "isRecommended": true
  },
  {
    "name": "noDuplicateParameters",
    "description": "Disallow duplicate function parameter name.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-duplicate-parameters",
    "isRecommended": true
  },
  {
    "name": "noDuplicateTestHooks",
    "description": "A describe block should not contain duplicate hooks.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-duplicate-test-hooks",
    "isRecommended": false
  },
  {
    "name": "noEmptyBlockStatements",
    "description": "Disallow empty block statements and static blocks.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-empty-block-statements",
    "isRecommended": false
  },
  {
    "name": "noEmptyInterface",
    "description": "Disallow the declaration of empty interfaces.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-empty-interface",
    "isRecommended": true
  },
  {
    "name": "noEvolvingTypes",
    "description": "Disallow variables from evolving into any type through reassignments.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-evolving-types",
    "isRecommended": false
  },
  {
    "name": "noExplicitAny",
    "description": "Disallow the any type usage.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-explicit-any",
    "isRecommended": true
  },
  {
    "name": "noExportsInTest",
    "description": "Disallow using export or module.exports in files containing tests",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-exports-in-test",
    "isRecommended": false
  },
  {
    "name": "noExtraNonNullAssertion",
    "description": "Prevents the wrong usage of the non-null assertion operator (!) in TypeScript files.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-extra-non-null-assertion",
    "isRecommended": true
  },
  {
    "name": "noFallthroughSwitchClause",
    "description": "Disallow fallthrough of switch clauses.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-fallthrough-switch-clause",
    "isRecommended": true
  },
  {
    "name": "noFocusedTests",
    "description": "Disallow focused tests.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-focused-tests",
    "isRecommended": false
  },
  {
    "name": "noFunctionAssign",
    "description": "Disallow reassigning function declarations.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-function-assign",
    "isRecommended": true
  },
  {
    "name": "noGlobalAssign",
    "description": "Disallow assignments to native objects and read-only global variables.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-global-assign",
    "isRecommended": true
  },
  {
    "name": "noGlobalIsFinite",
    "description": "Use Number.isFinite instead of global isFinite.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-global-is-finite",
    "isRecommended": true
  },
  {
    "name": "noGlobalIsNan",
    "description": "Use Number.isNaN instead of global isNaN.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-global-is-nan",
    "isRecommended": true
  },
  {
    "name": "noHeadImportInDocument",
    "description": "Prevent using the next/head module in pages/_document.js on Next.js projects.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-head-import-in-document",
    "isRecommended": false
  },
  {
    "name": "noImplicitAnyLet",
    "description": "Disallow use of implicit any type on variable declarations.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-implicit-any-let",
    "isRecommended": true
  },
  {
    "name": "noImportAssign",
    "description": "Disallow assigning to imported bindings",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-import-assign",
    "isRecommended": true
  },
  {
    "name": "noIrregularWhitespace",
    "description": "Disallows the use of irregular whitespace characters.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-irregular-whitespace",
    "isRecommended": true
  },
  {
    "name": "noLabelVar",
    "description": "Disallow labels that share a name with a variable",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-label-var",
    "isRecommended": true
  },
  {
    "name": "noMisleadingCharacterClass",
    "description": "Disallow characters made with multiple code points in character class syntax.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-misleading-character-class",
    "isRecommended": true
  },
  {
    "name": "noMisleadingInstantiator",
    "description": "Enforce proper usage of new and constructor.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-misleading-instantiator",
    "isRecommended": true
  },
  {
    "name": "noMisplacedAssertion",
    "description": "Checks that the assertion function, for example expect, is placed inside an it() function call.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-misplaced-assertion",
    "isRecommended": false
  },
  {
    "name": "noMisrefactoredShorthandAssign",
    "description": "Disallow shorthand assign when variable appears on both sides.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-misrefactored-shorthand-assign",
    "isRecommended": true
  },
  {
    "name": "noOctalEscape",
    "description": "Disallow octal escape sequences in string literals",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-octal-escape",
    "isRecommended": true
  },
  {
    "name": "noPrototypeBuiltins",
    "description": "Disallow direct use of Object.prototype builtins.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-prototype-builtins",
    "isRecommended": true
  },
  {
    "name": "noReactSpecificProps",
    "description": "Prevents React-specific JSX properties from being used.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-react-specific-props",
    "isRecommended": false
  },
  {
    "name": "noRedeclare",
    "description": "Disallow variable, function, class, and type redeclarations in the same scope.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-redeclare",
    "isRecommended": true
  },
  {
    "name": "noRedundantUseStrict",
    "description": "Prevents from having redundant \"use strict\".",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-redundant-use-strict",
    "isRecommended": true
  },
  {
    "name": "noSelfCompare",
    "description": "Disallow comparisons where both sides are exactly the same.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-self-compare",
    "isRecommended": true
  },
  {
    "name": "noShadowRestrictedNames",
    "description": "Disallow identifiers from shadowing restricted names.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-shadow-restricted-names",
    "isRecommended": true
  },
  {
    "name": "noSkippedTests",
    "description": "Disallow disabled tests.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-skipped-tests",
    "isRecommended": false
  },
  {
    "name": "noSparseArray",
    "description": "Prevents the use of sparse arrays (arrays with holes).",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-sparse-array",
    "isRecommended": true
  },
  {
    "name": "noSuspiciousSemicolonInJsx",
    "description": "It detects possible “wrong” semicolons inside JSX elements.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-suspicious-semicolon-in-jsx",
    "isRecommended": true
  },
  {
    "name": "noTemplateCurlyInString",
    "description": "Disallow template literal placeholder syntax in regular strings.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-template-curly-in-string",
    "isRecommended": true
  },
  {
    "name": "noThenProperty",
    "description": "Disallow then property.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-then-property",
    "isRecommended": true
  },
  {
    "name": "noTsIgnore",
    "description": "Prevents the use of the TypeScript directive @ts-ignore.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-ts-ignore",
    "isRecommended": true
  },
  {
    "name": "noUnassignedVariables",
    "description": "Disallow let or var variables that are read but never assigned.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-unassigned-variables",
    "isRecommended": false
  },
  {
    "name": "noUnsafeDeclarationMerging",
    "description": "Disallow unsafe declaration merging between interfaces and classes.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-unsafe-declaration-merging",
    "isRecommended": true
  },
  {
    "name": "noUnsafeNegation",
    "description": "Disallow using unsafe negation.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-unsafe-negation",
    "isRecommended": true
  },
  {
    "name": "noUselessEscapeInString",
    "description": "Disallow unnecessary escapes in string literals.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-useless-escape-in-string",
    "isRecommended": true
  },
  {
    "name": "noUselessRegexBackrefs",
    "description": "Disallow useless backreferences in regular expression literals that always match an empty string.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-useless-regex-backrefs",
    "isRecommended": true
  },
  {
    "name": "noVar",
    "description": "Disallow the use of var",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-var",
    "isRecommended": false
  },
  {
    "name": "noWith",
    "description": "Disallow with statements in non-strict contexts.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/no-with",
    "isRecommended": true
  },
  {
    "name": "useAdjacentOverloadSignatures",
    "description": "Disallow the use of overload signatures that are not next to each other.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/use-adjacent-overload-signatures",
    "isRecommended": true
  },
  {
    "name": "useAwait",
    "description": "Ensure async functions utilize await.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/use-await",
    "isRecommended": false
  },
  {
    "name": "useDefaultSwitchClauseLast",
    "description": "Enforce default clauses in switch statements to be last",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/use-default-switch-clause-last",
    "isRecommended": true
  },
  {
    "name": "useErrorMessage",
    "description": "Enforce passing a message value when creating a built-in error.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/use-error-message",
    "isRecommended": false
  },
  {
    "name": "useGetterReturn",
    "description": "Enforce get methods to always return a value.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/use-getter-return",
    "isRecommended": true
  },
  {
    "name": "useGoogleFontDisplay",
    "description": "Enforces the use of a recommended display strategy with Google Fonts.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/use-google-font-display",
    "isRecommended": true
  },
  {
    "name": "useGuardForIn",
    "description": "Require for-in loops to include an if statement.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/use-guard-for-in",
    "isRecommended": false
  },
  {
    "name": "useIsArray",
    "description": "Use Array.isArray() instead of instanceof Array.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/use-is-array",
    "isRecommended": true
  },
  {
    "name": "useIterableCallbackReturn",
    "description": "Enforce consistent return values in iterable callbacks.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/use-iterable-callback-return",
    "isRecommended": true
  },
  {
    "name": "useNamespaceKeyword",
    "description": "Require using the namespace keyword over the module keyword to declare TypeScript namespaces.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/use-namespace-keyword",
    "isRecommended": true
  },
  {
    "name": "useNumberToFixedDigitsArgument",
    "description": "Enforce using the digits argument with Number#toFixed().",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/use-number-to-fixed-digits-argument",
    "isRecommended": false
  },
  {
    "name": "useStaticResponseMethods",
    "description": "Use static Response methods instead of new Response() constructor when possible.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/use-static-response-methods",
    "isRecommended": false
  },
  {
    "name": "useStrictMode",
    "description": "Enforce the use of the directive \"use strict\" in script files.",
    "category": "suspicious",
    "url": "https://biomejs.dev/linter/rules/use-strict-mode",
    "isRecommended": false
  }
]
